{
	"info": {
		"_postman_id": "3d711487-37cf-4e8b-b73d-d48a24f6d1d5",
		"name": "Track",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18901686",
		"_collection_link": "https://martian-desert-938170.postman.co/workspace/Web_Exam2_Tony~a00ca5ac-d785-4cb1-838c-50ae518d52c0/collection/18901686-3d711487-37cf-4e8b-b73d-d48a24f6d1d5?action=share&source=collection_link&creator=18901686"
	},
	"item": [
		{
			"name": "Create a track",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has an id property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('id');\r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"var albumId = responseBody.id;\r",
							"pm.globals.set(\"trackId\", albumId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"True Colors\",\r\n    \"duracion\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tracks",
					"host": [
						"{{url}}"
					],
					"path": [
						"tracks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a track with negative duration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Right error message\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').that.equals('The duration of the track must be a positive number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"True Colors\",\r\n    \"duracion\": -3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tracks",
					"host": [
						"{{url}}"
					],
					"path": [
						"tracks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all tracks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has an id property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.length.gte(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/tracks",
					"host": [
						"{{url}}"
					],
					"path": [
						"tracks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one track by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/tracks/{{trackId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"tracks",
						"{{trackId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one track by wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Right error message\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').that.equals('The track with the given id was not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/tracks/{{wrongId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"tracks",
						"{{wrongId}}"
					]
				}
			},
			"response": []
		}
	]
}